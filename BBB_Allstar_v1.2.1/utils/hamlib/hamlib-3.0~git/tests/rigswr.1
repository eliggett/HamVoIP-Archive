.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH RIGSWR "1" "February 24, 2007" "Hamlib" "Radio SWR Measurement Tool"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
rigswr \- measure VSWR vs frequency using \fBHamlib\fP.
.SH SYNOPSIS
.B rigswr
[\fIOPTION\fR]... start_freq stop_freq [freq_step]
.SH DESCRIPTION
\fBrigswr\fP uses \fBHamlib\fP to control a rig to measure VSWR vs frequency: 
.br
It scans frequencies from \fIstart_freq\fP to \fIstop_freq\fP with a step of
\fIfreq_step\fP. For each frequency, it transmits at 25% of total POWER during
0.5 second in CW mode and reads VSWR.

Frequency and the corresponding VSWR are then printed on \fBstdout\fP.

To work correctly, \fBrigswr\fP needs a rig that can measure VSWR and a 
\fBHamlib\fP backend that supports reading VSWR from the rig.
.PP
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invode bold face and italics, 
.\" respectively.
Keep in mind that \fBHamlib\fP is BETA level software. 
While a lot of backend libraries lack complete rig support, the basic functions
are usually well supported.  The API may change without publicized notice, 
while an advancement of the minor version (e.g. 1.1.x to 1.2.x) indicates such
a change.
.PP
Please report bugs and provide feedback at the e-mail address given in the 
REPORTING BUGS section.  Patches and code enhancements are also welcome.
.SH OPTIONS
This program follows the usual GNU command line syntax, with long
options starting with two dashes (`-').

Here is a summary of the supported options:
.TP
.B \-m, --model=id
Select radio model number. See model list (use 'rigctl -l').
.TP
.B \-r, --rig-file=device
Use \fIdevice\fP as the file name of the port the radio is connected.
Often a serial port, but could be a USB to serial adapter.  Typically 
/dev/ttyS0, /dev/ttyS1, /dev/ttyUSB0, etc.
.TP
.B \-s, --serial-speed=baud
Set serial speed to \fIbaud\fP rate. Uses maximum serial speed from rig
backend capabilities as the default.
.TP
.B \-c, --civaddr=id
Use \fIid\fP as the CI-V address to communicate with the rig. Only useful for 
Icom rigs.
.br
NB: the \fIid\fP is in decimal notation, unless prefixed by 
\fI0x\fP, in which case it is hexadecimal.
.TP
.B \-p, --ptt-file=device
Use \fIdevice\fP as the file name of the Push-To-Talk device using a
device file as described above.
.br
This is only needed if the radio doesn't have legacy PTT control.
.TP
.B \-p, --ptt-type=type
Use \fItype\fP of Push-To-Talk device.
Supported types are RIG, DTR, RTS, PARALLEL, NONE.
.br
This is only needed if the radio doesn't have legacy PTT control.
.TP
.B \-C, --set-conf=parm=val[,parm=val]*
Set config parameter.  e.g. stop_bits=2
.br
Use -L option of \fBrigctl\fP for a list.
.TP
.B \-v, --verbose
Set verbose mode, cumulative (see DIAGNOSTICS below).
.TP
.B \-h, --help
Show summary of these options and exit.
.TP
.B \-V, --version
Show version of \fBrigswr\fP and exit.
.PP
\fBNOTE!\fP Some options may not be implemented by a given backend and will
return an error.  This is most likely to occur with the \fI\-\-set-conf\fP 
option.
.SH EXAMPLE
rigswr -m 209 -r /dev/ttyS1 14000000 14290000 50000 > cswr
.PP
Scans frequencies between 14.000 MHz and 14.200 MHz with 50 kHz step on a 
TS-850 and records VSWR measurements in file cswr.
.PP
After completion, cswr file contains the following lines:
.br
  14000000 1.50
.br
  14050000 1.31
.br
  14100000 1.22
.br
  14150000 1.07
.br
  14200000 1.07
.TP
Result could then be plotted with \fBgnuplot\fP:
.br
gnuplot
.br
set data style linespoints
.br
set grid
.br
plot "cswr"
.SH DIAGNOSTICS
The \fB-v\fP, \fB--version\fP option allows different levels of diagnostics
to be output to \fBstderr\fP and correspond to -v for BUG, -vv for ERR, 
-vvv for WARN, -vvvv for VERBOSE, or -vvvvv for TRACE.  

A given verbose level is useful for providing needed debugging information to
the email address below.  For example, TRACE output shows all of the values
sent to and received from the radio which is very useful for radio backend
library development and may be requested by the developers.
.SH EXIT STATUS
\fBrigswr\fP exits with:
.br
0 if all operations completed normally;
.br
1 if there was an invalid command line option or argument;
.br
2 if an error was returned by \fBHamlib\fP;
.br
3 if the rig doesn't have the required capabilities.
.SH BUGS
Depending on keyer/QSK setup, transmissions in CW mode may not be modulated
thus possibly giving a wrong result. Please report this situation if it happens.
.SH REPORTING BUGS
Report bugs to <hamlib-developer@lists.sourceforge.net>.
.br
We are already aware of the bug in the previous section :-)
.SH AUTHORS
Written by Thierry Leconte, Stephane Fillod, and the Hamlib Group
.br
<http://www.hamlib.org>.
.SH COPYRIGHT
Copyright \(co 2004-2009 Thierry Leconte, Stephane Fillod, and the Hamlib
Group.
.br
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.
.SH SEE ALSO
.BR rigctl (1),
.BR gnuplot (1),
.BR hamlib (3)

